name: .NET Core

on:
  push:
    
jobs:
  build:

    runs-on: ubuntu-latest
    env:
     working_directory: ./AzFuncNotifySlack
       
    steps:
    - uses: actions/checkout@v2      
    - run: |
       git fetch --prune --unshallow
    - name: Get Git Version
      uses: docker://gittools/gitversion:5.0.2-beta1-27-linux-centos-7-netcoreapp2.2
      with:
        args: /github/workspace /nofetch /exec /bin/sh /execargs "-c \"echo $GitVersion_FullSemVer > /github/workspace/version.txt\""
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      working-directory: ${{env.working-directory}} 
      run: |
        echo "hello1"
        ls
        echo "hello2"
        cd AzFuncNotifySlack
        ls
        echo "hello3"
        dotnet restore 
    #- uses: actions/checkout@v1
  #- name: Create Release
   #   uses: actions/create-release@v1
    #  with:
     #     tag_name: $(cat ${{env.working-directory}}/version.txt)
    - name: Build
      working-directory: ${{env.working-directory}} 
      run: dotnet build --configuration Release --no-restore
    #- name: Create the package
    #  run: dotnet pack --configuration Release AzFuncNotifySlack/AzureSlackFunction.csproj
    - name: Extract Octopus Tools
      working-directory: ${{env.working-directory}} 
      run: |
        mkdir /opt/octo
        cd /opt/octo
        wget -O /opt/octo/octopus.zip https://download.octopusdeploy.com/octopus-tools/7.3.3/OctopusTools.7.3.3.portable.zip
        unzip /opt/octo/octopus.zip
        chmod +x /opt/octo/Octo
    - name: Pack Application
      working-directory: ${{env.working-directory}} 
      run: >-
        /opt/octo/Octo pack .
        --outFolder /home/runner/work/AzFuncNotifySlack
        --basePath /home/runner/work/AzFuncNotifySlack/AzureSlackFunction
        --id AwsSamLambda
        --version $(cat /home/runner/work/AzFuncNotifySlack/AzureSlackFunction/version.txt)
        --format zip
    - name: Push to Octopus
      working-directory: ${{env.working-directory}} 
      run: >-
        /opt/octo/Octo push
        --server ${{ secrets.OCTOADMINSAMPLE_URL }}
        --apiKey ${{ secrets.OCTOADMINSAMPLE_APIKEY }}
        --package /home/runner/work/AzFuncNotifySlack/AzureSlackFunction.$(cat /home/runner/work/AzFuncNotifySlack/AzureSlackFunction/version.txt).zip
        --overwrite-mode IgnoreIfExists
