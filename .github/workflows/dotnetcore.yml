name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      run: dotnet restore AzFuncNotifySlack/AzureSlackFunction.csproj   
    - name: GitVersion
      id: gitversion
      uses: nmcc/actions/gitversion@v1
      with:
        path-to-gitversion: packages/GitVersion.CommandLine/tools/GitVersion.exe
    - name: Create Release
      uses: actions/create-release@v1
      with:
          tag_name: ${{ steps.gitversion.outputs.SemVer }}
    - name: Build
      run: dotnet build AzFuncNotifySlack/AzureSlackFunction.csproj --configuration Release --no-restore
    #- name: Create the package
    #  run: dotnet pack --configuration Release AzFuncNotifySlack/AzureSlackFunction.csproj
    - name: Extract Octopus Tools
      run: |
        mkdir /opt/octo
        cd /opt/octo
        wget -O /opt/octo/octopus.zip https://download.octopusdeploy.com/octopus-tools/7.3.3/OctopusTools.7.3.3.portable.zip
        unzip /opt/octo/octopus.zip
        chmod +x /opt/octo/Octo
    - name: Pack Application
      run: >-
        /opt/octo/Octo pack .
        --outFolder /home/runner/work/AzFuncNotifySlack
        --basePath /home/runner/work/AzFuncNotifySlack/AzureSlackFunction
        --id AwsSamLambda
        --version ${{ steps.gitversion.outputs.SemVer }}
        --format zip
    - name: Push to Octopus
      run: >-
        /opt/octo/Octo push
        --server ${{ secrets.OCTOADMINSAMPLE_URL }}
        --apiKey ${{ secrets.OCTOADMINSAMPLE_APIKEY }}
        --package /home/runner/work/AzFuncNotifySlack/AzureSlackFunction.${{ steps.gitversion.outputs.SemVer }}.zip
        --overwrite-mode IgnoreIfExists
